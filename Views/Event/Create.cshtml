@model EventEase_Part_1.Models.Event

@{
    ViewData["Title"] = "Create Event";
}

<h2>Create Event</h2>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="All" class="text-danger"></div> <!-- show all validation errors -->

    <div class="form-group">
        <label asp-for="EventName" class="control-label"></label>
        <input asp-for="EventName" class="form-control" />
        <span asp-validation-for="EventName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EventDate" class="control-label"></label>
        <input asp-for="EventDate" type="date" class="form-control" />
        <span asp-validation-for="EventDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
    <label asp-for="VenueID" class="control-label">Select Venue</label>
    <select asp-for="VenueID" class="form-control" asp-items="@(ViewData["VenueID"] as SelectList)">
        <option value="">-- Select Venue --</option>
    </select>
    <span asp-validation-for="VenueID" class="text-danger"></span>
</div>

    <!-- Part 3 Question (Step 6a): This will allow users to select the event type when creating. -->
    <div class="form-group">
        <label>Event Type</label>
		<select asp-for="EventTypeID" asp-items="@(new SelectList((IEnumerable<EventType>)ViewData["EventTypes"], "EventTypeID", "Name"))" class="form-control">
            <option value="">-- Select Type --</option>
        </select>
    </div>


    <button type="submit" class="btn btn-success">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
